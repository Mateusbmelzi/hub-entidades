// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { authLog } from '@/lib/debug-config';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://lddtackcnpzdswndqgfs.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxkZHRhY2tjbnB6ZHN3bmRxZ2ZzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTY5MDgsImV4cCI6MjA2Njk3MjkwOH0.NPN6E-4RttputzXcVavoOTRGiM9c3T5bLaLPTtJJM4s";

  authLog('üîß Configurando cliente Supabase:');
  authLog('  - URL:', SUPABASE_URL);
  authLog('  - Key:', SUPABASE_PUBLISHABLE_KEY ? '‚úÖ Configurada' : '‚ùå N√£o configurada');

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
  }
});

// Adicionar listener para debug de mudan√ßas de sess√£o
supabase.auth.onAuthStateChange((event, session) => {
  authLog('üîÑ Supabase Auth State Change:', event);
  authLog('  - Session:', session ? '‚úÖ Existe' : '‚ùå N√£o existe');
  authLog('  - User ID:', session?.user?.id || 'null');
  authLog('  - User Email:', session?.user?.email || 'null');
  
  // Verificar localStorage ap√≥s mudan√ßa
  setTimeout(() => {
    const supabaseKeys = Object.keys(localStorage).filter(key => key.includes('supabase'));
    authLog('üîç Chaves Supabase no localStorage ap√≥s mudan√ßa:', supabaseKeys);
    supabaseKeys.forEach(key => {
      authLog(`  - ${key}:`, localStorage.getItem(key) ? '‚úÖ' : '‚ùå');
    });
  }, 100);
});